{"version":3,"sources":["components/SubscriptionImageTopic.jsx","App.jsx","index.jsx"],"names":["SubscriptionImageTopic","node","useNode","useState","messages","setMessages","topicName","setTopicName","subscription","useSubscription","message","prevMessages","newMessages","slice","unshift","id","uuid","cols","rows","Content","MessageList","length","Box","display","height","alignItems","justifyContent","Typography","messageItems","map","ListItem","button","divider","ListItemText","primary","List","disablePadding","overflow","title","raised","m","pt","Grid","spacing","item","xs","TextField","label","value","onChange","event","target","disabled","variant","fullWidth","App","Container","maxWidth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQA6GeA,MAzFf,WACE,IAAMC,EAAOC,YAAQ,0BAErB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,EAAkCF,mBAAS,oBAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EAAeC,YACnBR,EACA,iCACAK,GACA,SAACI,GACCL,GAAY,SAACM,GACX,IAAMC,EAAcD,EAAaE,QAOjC,OANAD,EAAYE,QAAQ,CAClBC,GAAIC,eACJC,KAAMP,EAAQO,KACdC,KAAMR,EAAQQ,OAGTN,QAKPO,EAAU,WACd,GAAqB,OAAjBX,EACF,OAAO,cAAC,IAAD,IAGT,IAAMY,EAAc,WAClB,GAAIhB,EAASiB,QAAU,EACrB,OACE,cAACC,EAAA,EAAD,CACEC,QAAQ,OACRC,OAAO,OACPC,WAAW,SACXC,eAAe,SAJjB,SAME,cAACC,EAAA,EAAD,wBAKN,IAAMC,EAAexB,EAASyB,KAAI,SAACnB,GACjC,OACE,cAACoB,EAAA,EAAD,CAA2BC,QAAM,EAACC,SAAO,EAAzC,SACE,cAACC,EAAA,EAAD,CAAcC,QAAO,UAAKxB,EAAQO,KAAb,cAAuBP,EAAQQ,SADvCR,EAAQK,OAM3B,OAAO,cAACoB,EAAA,EAAD,CAAMC,gBAAc,EAApB,SAAsBR,KAG/B,OACE,cAACN,EAAA,EAAD,CAAKE,OAAQ,IAAKa,SAAS,OAA3B,SACE,cAACjB,EAAD,OASN,OACE,cAAC,IAAD,CAAYkB,MAAM,2BAA2BC,QAAM,EAACH,gBAAc,EAAlE,SACE,cAACd,EAAA,EAAD,CAAKkB,EAAG,EAAGC,GAAI,EAAf,SACE,eAACC,EAAA,EAAD,CAAMC,QAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEC,MAAM,aACNC,MAAO1C,EACP2C,SAZc,SAACC,GACzB3C,EAAa2C,EAAMC,OAAOH,QAYhBI,SAAU5C,EACV6C,QAAQ,WACRC,WAAS,MAGb,cAACZ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAAC1B,EAAD,cCnFGoC,MAZf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAAC,EAAD,WCPVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0157c309.chunk.js","sourcesContent":["import {\n  Box,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\n\nimport {\n  BoxedCircularProgress,\n  TitledCard,\n  useNode,\n  useSubscription,\n} from \"kumo-app\";\n\nimport React, { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nfunction SubscriptionImageTopic() {\n  const node = useNode(\"img_topic_subscription\");\n\n  const [messages, setMessages] = useState([]);\n\n  const [topicName, setTopicName] = useState(\"camera/raw_image\");\n\n  const subscription = useSubscription(\n    node,\n    \"shisen_interfaces/msg/RawImage\",\n    topicName,\n    (message) => {\n      setMessages((prevMessages) => {\n        const newMessages = prevMessages.slice();\n        newMessages.unshift({\n          id: uuid(),\n          cols: message.cols,\n          rows: message.rows,\n        });\n\n        return newMessages;\n      });\n    }\n  );\n\n  const Content = () => {\n    if (subscription === null) {\n      return <BoxedCircularProgress />;\n    }\n\n    const MessageList = () => {\n      if (messages.length <= 0) {\n        return (\n          <Box\n            display=\"flex\"\n            height=\"100%\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Typography>No Data</Typography>\n          </Box>\n        );\n      }\n\n      const messageItems = messages.map((message) => {\n        return (\n          <ListItem key={message.id} button divider>\n            <ListItemText primary={`${message.cols} x ${message.rows}`} />\n          </ListItem>\n        );\n      });\n\n      return <List disablePadding>{messageItems}</List>;\n    };\n\n    return (\n      <Box height={200} overflow=\"auto\">\n        <MessageList />\n      </Box>\n    );\n  };\n\n  const onTopicNameChange = (event) => {\n    setTopicName(event.target.value);\n  };\n\n  return (\n    <TitledCard title=\"Subscription Image Topic\" raised disablePadding>\n      <Box m={2} pt={2}>\n        <Grid spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              label=\"Topic Name\"\n              value={topicName}\n              onChange={onTopicNameChange}\n              disabled={subscription}\n              variant=\"outlined\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Content />\n          </Grid>\n        </Grid>\n      </Box>\n    </TitledCard>\n  );\n}\n\nexport default SubscriptionImageTopic;\n","import { Container } from \"@material-ui/core\";\nimport React from \"react\";\nimport { LoggerProvider, SessionProvider } from \"kumo-app\";\n\nimport SubscriptionImageTopic from \"./components/SubscriptionImageTopic\";\n\nfunction App() {\n  return (\n    <LoggerProvider>\n      <SessionProvider>\n        <Container maxWidth=\"sm\">\n          <SubscriptionImageTopic />\n        </Container>\n      </SessionProvider>\n    </LoggerProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}