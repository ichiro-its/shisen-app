{"version":3,"sources":["components/AppBar.jsx","components/Snackbar.jsx","App.jsx","index.jsx"],"names":["AppBar","position","variant","useStyles","makeStyles","theme","root","width","marginTop","spacing","Snackbar","message","type","classes","useState","open","setOpen","handleClose","event","reason","className","autoHideDuration","onClose","elevation","severity","flexGrow","title","App","url","setURL","connected","setConnected","showMessage","msg","ReactDOM","render","document","getElementById","ros","ROSLIB","Ros","on","Card","CardContent","TextField","label","value","onChange","target","CardActions","Button","onClick","connect","err","id","StrictMode"],"mappings":"6QAiBeA,MAZf,WACE,OACE,8BACE,cAAC,IAAD,CAAWC,SAAS,SAApB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAeC,QAAQ,KAAvB,+B,kBCJJC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,OACP,YAAa,CACXC,UAAWH,EAAMI,QAAQ,SAsChBC,EAjCE,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KACrBC,EAAUV,IADsB,EAEdW,oBAAS,GAFK,mBAE/BC,EAF+B,KAEzBC,EAFyB,KAIhCC,EAAc,SAACC,EAAOC,GACX,cAAXA,GAIJH,GAAQ,IAGV,OACE,qBAAKI,UAAWP,EAAQP,KAAxB,SACE,cAAC,IAAD,CAAaS,KAAMA,EAAMM,iBAAkB,IAAMC,QAASL,EAA1D,SACE,cAAC,IAAD,CACEM,UAAW,EACXrB,QAAQ,SACRoB,QAAkB,YAATV,EAAqBK,EAAc,GAC5CO,SAAUZ,EAJZ,SAMGD,SCvBLR,EAAYC,aAAW,iBAAO,CAClCE,KAAM,CACJmB,SAAU,GAEZC,MAAO,CACLD,SAAU,OA4ECE,MAxEf,WACE,IAAMd,EAAUV,IADH,EAESW,mBAAS,uBAFlB,mBAENc,EAFM,KAEDC,EAFC,OAGqBf,oBAAS,GAH9B,mBAGNgB,EAHM,KAGKC,EAHL,KAKPC,EAAc,SAACC,EAAKrB,GACxBsB,IAASC,OACP,cAAC,EAAD,CAAUvB,KAAMA,EAAMD,QAASsB,IAC/BG,SAASC,eAAe,cAItBC,EAAM,IAAIC,IAAOC,IA6BvB,OA3BAF,EAAIG,GAAG,cAAc,WACnBV,GAAa,GACbC,EAAY,YAAa,cAG3BM,EAAIG,GAAG,SAAS,WACdV,GAAa,GACbC,EAAY,QAAS,YAGvBM,EAAIG,GAAG,SAAS,WACdV,GAAa,GACbC,EAAY,QAAS,cAgBrB,sBAAKZ,UAAWP,EAAQP,KAAxB,UACE,cAAC,EAAD,IACA,eAACoC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACIb,EAQA,GAPA,cAACc,EAAA,EAAD,CACEC,MAAM,gBACN3C,QAAQ,SACR4C,MAAOlB,EACPmB,SAdY,SAAC7B,GACvBW,EAAOX,EAAM8B,OAAOF,YAmBhB,eAACG,EAAA,EAAD,WACInB,EAKA,GAJA,cAACoB,EAAA,EAAD,CAAQhD,QAAQ,WAAWiD,QA9Bf,WACpB,IACEb,EAAIc,QAAQxB,GACZ,MAAOyB,GACPrB,EAAY,gBAAiB,UA0BvB,qBAMF,qBAAKsB,GAAG,uBCnFlBpB,IAASC,OACP,cAAC,IAAMoB,WAAP,UACE,cAAC,EAAD,MAEFnB,SAASC,eAAe,W","file":"static/js/main.ef11cb97.chunk.js","sourcesContent":["import React from \"react\";\nimport MuiAppBar from \"@material-ui/core/AppBar\";\nimport MuiToolbar from \"@material-ui/core/Toolbar\";\nimport MuiTypography from \"@material-ui/core/Typography\";\n\nfunction AppBar() {\n  return (\n    <div>\n      <MuiAppBar position=\"static\">\n        <MuiToolbar>\n          <MuiTypography variant=\"h6\">Shisen App</MuiTypography>\n        </MuiToolbar>\n      </MuiAppBar>\n    </div>\n  );\n}\n\nexport default AppBar;\n","import PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport MuiSnackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst Snackbar = ({ message, type }) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <MuiSnackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <MuiAlert\n          elevation={6}\n          variant=\"filled\"\n          onClose={type === \"success\" ? handleClose : \"\"}\n          severity={type}\n        >\n          {message}\n        </MuiAlert>\n      </MuiSnackbar>\n    </div>\n  );\n};\n\nSnackbar.propTypes = {\n  message: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default Snackbar;\n","import Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ROSLIB from \"roslib\";\n\nimport AppBar from \"./components/AppBar\";\nimport Snackbar from \"./components/Snackbar\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [url, setURL] = useState(\"ws://localhost:9090\");\n  const [connected, setConnected] = useState(false);\n\n  const showMessage = (msg, type) => {\n    ReactDOM.render(\n      <Snackbar type={type} message={msg} />,\n      document.getElementById(\"snackbar\")\n    );\n  };\n\n  const ros = new ROSLIB.Ros();\n\n  ros.on(\"connection\", () => {\n    setConnected(true);\n    showMessage(\"Connected\", \"success\");\n  });\n\n  ros.on(\"error\", () => {\n    setConnected(false);\n    showMessage(\"Error\", \"error\");\n  });\n\n  ros.on(\"close\", () => {\n    setConnected(false);\n    showMessage(\"Close\", \"warning\");\n  });\n\n  const handleConnect = () => {\n    try {\n      ros.connect(url);\n    } catch (err) {\n      showMessage(\"URL not valid\", \"info\");\n    }\n  };\n\n  const onChangeHandler = (event) => {\n    setURL(event.target.value);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar />\n      <Card>\n        <CardContent>\n          {!connected ? (\n            <TextField\n              label=\"URL WebSocket\"\n              variant=\"filled\"\n              value={url}\n              onChange={onChangeHandler}\n            />\n          ) : (\n            \"\"\n          )}\n        </CardContent>\n        <CardActions>\n          {!connected ? (\n            <Button variant=\"outlined\" onClick={handleConnect}>\n              Connect\n            </Button>\n          ) : (\n            \"\"\n          )}\n          <div id=\"snackbar\" />\n        </CardActions>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}